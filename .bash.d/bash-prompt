ESC="$(echo -en '\e')"
BLACK="${ESC}[30m"
RED="${ESC}[31m"
GREEN="${ESC}[32m"
YELLOW="${ESC}[33m"
BLUE="${ESC}[34m"
PURPLE="${ESC}[35m"
CYAN="${ESC}[36m"
WHITE="${ESC}[37m"
BG_BLACK="${ESC}[1;30m"
BG_RED="${ESC}[1;31m"
BG_GREEN="${ESC}[1;32m"
BG_YELLOW="${ESC}[1;33m"
BG_BLUE="${ESC}[1;34m"
BG_PURPLE="${ESC}[1;35m"
BG_CYAN="${ESC}[1;36m"
BG_WHITE="${ESC}[1;37m"
NORMAL="${ESC}[0m"
BOLD="${ESC}[1m"
RESET="\e[0m"

DECORATION=${GREEN}
TEXT=${BG_WHITE}

# get current branch in git repo
function parse_git_branch() {
    BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
    if [ ! "${BRANCH}" == "" ]
    then
        STAT=`parse_git_dirty`
        echo "${DECORATION}━[ ${TEXT} ${BRANCH}${BOLD}${RED}${STAT} ${NORMAL}${DECORATION}]"
    else
        echo ""
    fi
}

# get current status of git repo
function parse_git_dirty {
    status=`git status 2>&1 | tee`
    dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
    untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
    ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
    newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
    renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
    deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
    bits=''
    if [ "${renamed}" == "0" ]; then
        bits="${YELLOW}>${bits}"
    fi
    if [ "${ahead}" == "0" ]; then
        bits="${RED}*${bits}"
    fi
    if [ "${newfile}" == "0" ]; then
        bits="${GREEN}+${bits}"
    fi
    if [ "${untracked}" == "0" ]; then
        bits="${YELLOW}?${bits}"
    fi
    if [ "${deleted}" == "0" ]; then
        bits="${RED}x${bits}"
    fi
    if [ "${dirty}" == "0" ]; then
        bits="${RED}!${bits}"
    fi
    if [ ! "${bits}" == "" ]; then
        echo " ${bits}"
    else
        echo ""
    fi
}

export PS1="\[${DECORATION}\]┏━[ \[${TEXT}\]\u\[${DECORATION}\]@\[${TEXT}\]\h \[${DECORATION}\]]━[ \[${TEXT}\]\w \[${DECORATION}\]]\`parse_git_branch\`
\[${DECORATION}\]┗━━━[\[${RESET}\] "
